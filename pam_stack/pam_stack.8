.TH pam_stack 8 2001/01/30 "Red Hat Linux" "System Administrator's Manual"
.SH NAME
pam_stack \- recurse into other PAM stacks
.SH SYNOPSIS
.B auth required /lib/security/pam_stack.so service=foo
.br
.B session optional /lib/security/pam_stack.so service=foo
.br
.B password optional /lib/security/pam_stack.so service=foo
.br
.B account optional /lib/security/pam_stack.so service=foo
.SH DESCRIPTION
In a nutshell, pam_stack lets you "call", from inside of the stack for a
particular service, the stack defined for any another service.  The intention
is to allow multiple services to "include" a system-wide setup, so that when
that setup needs to be changed, it need only be changed in one place.

.SH ARGUMENTS
.IP debug
turns on debugging via \fBsyslog(3)\fR.
.IP service=\fIname\fP
tells pam_stack.so to execute the stack defined for the service \fIname\fP,
which will usually be another file in \fB/etc/pam.d\fP.

.SH EXAMPLE
\fB/etc/pam.d/imap\fP:
.br
auth required /lib/security/pam_stack.so service=system-auth
.br
auth required /lib/security/pam_shells.so
.br
\fB/etc/pam.d/system-auth\fP:
.br
auth sufficient /lib/security/pam_krb5.so
.br
auth sufficient /lib/security/pam_unix.so shadow nullok
.br
auth required /lib/security/pam_deny.so

.br
.SH CAVEAT
Because recursion is fully supported, there is potential to really break things
by having a stack call itself either directly or via mutual recursion.
.br
.SH BUGS
Let's hope not, but if you find any, please email the author.  
.SH AUTHOR
Nalin Dahyabhai <nalin@redhat.com>
