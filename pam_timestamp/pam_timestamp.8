.TH pam_timestamp 8 2002/02/07 "Red Hat Linux" "System Administrator's Manual"
.SH NAME
pam_timestamp \- authenticate using cached successful authentication attempts
.SH SYNOPSIS
.B auth sufficient /lib/security/pam_timestamp.so
.br
.B session optional /lib/security/pam_timestamp.so
.br

.SH DESCRIPTION
In a nutshell, pam_timestamp caches successful authentication attempts, and
allows you to use a recent successful attempt as the basis for authentication.

When an application opens a session using pam_timestamp, a timestamp file is
created in the \fItimestampdir\fP directory for the user.  When an application
attempts to authenticate the user, a pam_timestamp will treat a sufficiently-
recent timestamp file as grounds for succeeding.

.SH ARGUMENTS
.IP debug
turns on debugging via \fBsyslog(3)\fR.
.IP timestampdir=\fIname\fP
tells pam_timestamp.so where to place and search for timestamp files.  This
should match the directory configured for sudo(1) in the sudoers(5) file.
.IP timestamp_timeout=\fInumber\fP
tells pam_timestamp.so how long it should treat timestamp files as valid
after their last modification date.  This should match the value configured
for sudo(1) in the sudoers(5) file.
.IP verbose
attempt to inform the user when access is granted.

.SH EXAMPLE
\fB/etc/pam.d/some-config-tool\fP:
.br
auth sufficient /lib/security/pam_timestamp.so verbose
auth required   /lib/security/pam_unix.so
.br
session required /lib/security/pam_permit.so
session optional /lib/security/pam_timestamp.so
.br

.SH CAVEATS
Users can get confused when they aren't always asked for passwords when running
a given program.  Some users reflexively begin typing information before
noticing that it's not being asked for.

.SH BUGS
Let's hope not, but if you find any, please email the author.  

.SH AUTHOR
Nalin Dahyabhai <nalin@redhat.com>
